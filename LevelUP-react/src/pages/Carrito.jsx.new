// En: src/pages/Carrito.jsx
import React from 'react';
import { Link } from 'react-router-dom';
import { useCart } from '../hooks/useCart.jsx';
import '../styles/carrito.css'; 
import { Button } from 'react-bootstrap'; 
import { useGoBackOnEsc } from '../hooks/useGoBackOnEsc';

const Carrito = () => {
  const cartContext = useCart();
  const carritoItems = cartContext?.carritoItems || [];
  const totalPrecio = cartContext?.totalPrecio || 0;
  
  useGoBackOnEsc();
  
  const {
    restarDelCarrito,
    agregarAlCarrito,
    eliminarDelCarrito,
    vaciarCarrito,
  } = cartContext || {};

  return (
    <div className="contenedor-carrito">
      <h1>Tu Canasta</h1>

      <div id="listaCarrito">
        {carritoItems.length === 0 ? (
          <p>Tu carrito est√° vac√≠o.</p>
        ) : (
          carritoItems.map((producto) => 
            producto && producto.codigo ? (
              <div key={producto.codigo} className="item-carrito">
                <div className="item-carrito-info">
                  <div className="item-carrito-imagen">
                    <img src={producto.img} alt={producto.nombre} />
                  </div>
                  <div className="item-carrito-detalles">
                    <h3>{producto.nombre || 'Nombre no disponible'}</h3>
                    <p>
                      <span className="texto-label">Unidades: </span>
                      <span className="texto-valor">{producto.unidades || 0}</span>
                      {agregarAlCarrito && (
                        <button 
                          className="btn-carrito accion" 
                          onClick={() => agregarAlCarrito(producto)}
                        >
                          ‚ûï
                        </button>
                      )}
                      {restarDelCarrito && (
                        <button 
                          className="btn-carrito accion" 
                          onClick={() => restarDelCarrito(producto.codigo)}
                        >
                          ‚ûñ
                        </button>
                      )}
                      {eliminarDelCarrito && (
                        <button 
                          className="btn-carrito eliminar" 
                          onClick={() => eliminarDelCarrito(producto.codigo)}
                        >
                          üóëÔ∏è
                        </button>
                      )}
                    </p>
                    <p>
                      <span className="texto-label">Precio Unitario: </span>
                      <span className="texto-valor">
                        ${(producto.precio || 0).toLocaleString('es-CL')}
                      </span>
                    </p>
                    <p>
                      <span className="texto-label">Subtotal: </span>
                      <span className="texto-valor">
                        ${((producto.unidades || 0) * (producto.precio || 0)).toLocaleString('es-CL')}
                      </span>
                    </p>
                  </div>
                </div>
              </div>
            ) : null
          )
        )}
      </div>

      {carritoItems.length > 0 && vaciarCarrito && (
        <div className="acciones">
          <button className="btn-vaciar" onClick={vaciarCarrito}>
            Vaciar Carrito
          </button>
        </div>
      )}

      <div className="resumen">
        <h2>
          <span className="texto-label">Total: </span>
          <span className="texto-valor">
            $ {totalPrecio.toLocaleString('es-CL')}
          </span>
        </h2>
        
        <Button
          as={Link}
          to="/checkout"
          className="btn-finalizar"
          disabled={carritoItems.length === 0}
          style={carritoItems.length === 0 ? { pointerEvents: 'none' } : {}}
        >
          Finalizar Compra
        </Button>
      </div>
    </div>
  );
};

export default Carrito;